/*
 * AUdit Trail
 *
 * This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.
 *
 * API version: 1.0.0
 * Contact: apiteam@swagger.io
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package main

import (
	"fmt"
	"log"
	"net/http"
	"os"
	"os/signal"
	"syscall"

	sw "mingo/audit/swagger"
)

func cleanup() {
	fmt.Println("cleanup")
	sw.Free()
}

func main() {

	c := make(chan os.Signal)
	signal.Notify(c, os.Interrupt, syscall.SIGTERM)
	go func() {
		<-c
		cleanup()
		os.Exit(1)
	}()

	port := os.Getenv("PORT")
	if port == "" {
		port = "8099"
	}

	log.Printf("Server started at port " + port)
	router := sw.NewRouter()

	log.Fatal(http.ListenAndServe(":"+port, router))
}
